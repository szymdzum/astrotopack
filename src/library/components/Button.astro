---
import { Icon } from 'astro-icon/components';
const { href, type, className, iconName } = Astro.props;
---

{
  href ? (
    <a class={`button fit-content ${className}`} href={href}>
      {iconName && <Icon class="icon" name={iconName} />}
      <span>
        <slot />
      </span>
    </a>
  ) : (
    <button
      type={type}
      class={`button
     ${className}`}
    >
      {iconName && <Icon class="icon" name={iconName} />}
      <span>
        <slot />
      </span>
    </button>
  )
}

<style lang="scss">
  .button {
    display: inline-flex;
    text-align: center;
    text-transform: uppercase;
    font-weight: 700;
    color: var(--neutral-900);
    background: var(--primary);
    padding-block: var(--padding-xs);
    padding-inline: var(--padding-sm);
    border-radius: var(--radius-btn);
    border: var(--border-sm);

    &:is(:hover, :focus) {
      transform: translateY(-4px) translateX(-2px);
      box-shadow: 2px 5px 0 0 var(--neutral-900);
    }

    &:where(button):where(:not(:active)):focus-visible {
      outline-offset: 5px;
    }

    &.secondary {
      background: var(--secondary);
      border: var(--border-sm);
    }

    &.outline {
      background: inherit;
      border: var(--border-sm);
    }

    &.full {
      display: block;
      width: 100%;
    }

    &.has-icon {
      display: flex;
      align-items: center;
      gap: var(--gap-xs);

      [data-icon] {
        font-size: 2.5ch;
      }
    }
  }
</style>
