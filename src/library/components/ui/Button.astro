---
// import { Icon } from 'astro-icon/components';

const {
  type = 'button',
  onClick,
  className = '',
  variant = 'primary',
  asLink = false,
  url = '#',
} = Astro.props;
const buttonClass = `button ${variant} ${className}`;
---

{
  asLink ? (
    <a href={url} class={buttonClass}>
      <slot />
    </a>
  ) : (
    <button type={type} onclick={onClick} class={buttonClass}>
      <span>
        <slot />
      </span>
    </button>
  )
}

<style lang="scss">
  .button {
    display: inline-flex;
    text-align: center;
    align-self: flex-start;
    line-height: 1.1;
    font-weight: 700;
    text-transform: uppercase;
    background: var(--primary);
    color: var(--neutral-900);
    font-size: 18px;
    padding: 0.75em 2em;
    border-radius: 5px;
    border: 2px solid var(--primary);
    transition: 0.3s ease-out;

    &:is(:hover) {
      background: var(--primary);
      border: 2px solid var(--primary);
    }

    &:is(:focus) {
      outline: none;
    }

    &:is(:active) {
      transform: translateY(3px) translateX(2px);
    }

    &.secondary {
      border: 2px solid #e8e8e4;
      background: #e8e8e4;
    }

    &.outline {
      background: inherit;
      color: var(--neutral-900);
      border: 2px solid var(--neutral-900);
    }

    &.large {
      font-size: 20px;
      padding: 1em 2em;
    }

    &.full {
      display: block;
      width: 100%;
    }

    &.email {
      border: 0;
      background: #fec5bb;
    }

    &.has-icon {
      display: flex;
      align-items: center;

      [data-icon] {
        font-size: 2ch;
        fill: currentColor;
        margin-right: 0.25em;
      }
    }
  }
</style>

<!-- <button class:list={[className]} type={type} data-size={size}>
  {iconName && <Icon class="icon" name={iconName} />}
</button> -->
